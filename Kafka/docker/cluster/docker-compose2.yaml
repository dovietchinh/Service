# version: "3"

services:
  zookeeper2:
    image: confluentinc/cp-zookeeper:7.7.1
    hostname: zookeeper2
    ports:
      - "3181:2181"
    restart: always
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOO_SERVERS: server.1=zookeeper:2181
      DATA_DIR: /data
      DATA_LOG_DIR: /datalog
      # ZOOKEEPER_SECURE_CLIENT_PORT: 2281
    volumes:
      - ./volumes2/zookeeper/data:/data
      - ./volumes2/zookeeper/datalog:/datalog
    networks:
      - kafka-cluster2
  kafka1_2:
    image: confluentinc/cp-kafka:7.7.1
    hostname: kafka1_2
    container_name: kafka-broker-1_2
    ports:
      - "10091:10091"
    restart: always
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper2:2181"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1_2:10091,LISTENER_DOCKER_EXTERNAL://0.0.0.0:10091
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1_2:10091,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-my_kafka_2}:10091
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      CONFLUENT_SUPPORT_METRICS_ENABLE: 0
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
    volumes:
      - ${PWD}/volumes2/kafka1/data:/var/lib/kafka/data
    user: 0:0
    depends_on:
      - zookeeper2
    networks:
      - kafka-cluster2
  kafka2_2:
    image: confluentinc/cp-kafka:7.7.1
    hostname: kafka2_2
    container_name: kafka-broker-2_2
    ports:
      - "10092:10092"
    restart: always
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper2:2181"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka2_2:10092,LISTENER_DOCKER_EXTERNAL://0.0.0.0:10092
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka2_2:10092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-my_kafka_2}:10092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      CONFLUENT_SUPPORT_METRICS_ENABLE: 0
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
    volumes:
      - ./volumes2/kafka2/data:/var/lib/kafka/data:rw
    user: 0:0
    depends_on:
      - zookeeper2
    networks:
      - kafka-cluster2
  kafka3_2:
    image: confluentinc/cp-kafka:7.7.1
    hostname: kafka3_2
    container_name: kafka-broker-3_2
    ports:
      - "10093:10093"
    restart: always
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper2:2181"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka3_2:10093,LISTENER_DOCKER_EXTERNAL://0.0.0.0:10093
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka3_2:10093,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-my_kafka_2}:10093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      CONFLUENT_SUPPORT_METRICS_ENABLE: 0
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
    volumes:
      - ./volumes2/kafka3/data:/var/lib/kafka/data:rw
    user: 0:0
    depends_on:
      - zookeeper2
    networks:
      - kafka-cluster2
  # kafdrop:
  #   image: obsidiandynamics/kafdrop:latest
  #   depends_on:
  #     - kafka1_2
  #     - kafka2_2
  #     - kafka3_2
  #   ports:
  #     - "9123:9123"
  #   restart: always
  #   environment:
  #     SERVER_PORT: 9123
  #     MANAGEMENT_SERVER_PORT: 9123
  #     KAFKA_BROKERCONNECT: kafka-broker-1:19091,kafka-broker-2:29092,kafka-broker-3:29093
  #   networks:
  #     - kafka-cluster

networks:
  kafka-cluster2:
    # Specify driver options
    name: kafka-cluster2
    driver: bridge

